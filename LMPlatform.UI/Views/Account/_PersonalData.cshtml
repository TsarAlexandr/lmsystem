@model LMPlatform.UI.ViewModels.AccountViewModels.PersonalDataViewModel


<div class="error-limit-registr">
	@Html.ValidationSummary("Ошибка!", new { @class = "alert alert-dismissable alert-danger" })
</div>

@Html.AntiForgeryToken()

<div class="row">
	<div class="col-md-6">
		<div class="panel panel-info">
			<div class="panel-heading">
				<div class="panel-title">Пользователь</div>
			</div>
			<div class="panel-body">
				<div>
					@Html.LabelFor(m => m.Surname, new {@class = "control-label"})
					<div>
						@Html.TextBoxFor(m => m.Surname, new {@class = "form-control"})
						@Html.ValidationMessageFor(e => e.Surname, " ")
					</div>
					<p></p>
				</div>
				<div>
					@Html.LabelFor(m => m.Name, new {@class = "control-label"})
					<div>
						@Html.TextBoxFor(m => m.Name, new {@class = "form-control"})
						@Html.ValidationMessageFor(e => e.Name, " ")
					</div>
					<p></p>
				</div>
				<div>
					@Html.LabelFor(m => m.Patronymic, new {@class = "control-label"})
					<div>
						@Html.TextBoxFor(m => m.Patronymic, new {@class = "form-control"})
						@Html.ValidationMessageFor(e => e.Patronymic, " ")
					</div>
					<p></p>
				</div>
			    <div>
			        @Html.LabelFor(m => m.UserName)
			        <br/>
			        @Html.DisplayTextFor(m => m.UserName)
			    </div>
			    <div style="display: none">
			        @Html.DisplayTextFor(m => m.IsActive)
			    </div>
			</div>
		</div>
		<div align="center">
			<input id="updatePersonalData" type="button" style="width: 200px" class="btn btn-primary btn-sm" value="Сохранить изменения"/>
			<input id="changePassword" type="button" style="width: 200px" class="btn btn-success btn-sm" value="Сменить пароль"/>
			<div id="changePasswordForm" style="display: none">
				<div>
					<label class="control-label"> Старый пароль</label>
					<input class="form-control" type="password" id="oldpassword" />
				</div>
				<div>
					<label class="control-label"> Новый пароль</label>
					<input class="form-control" type="password" id="newPassword" />
				</div>
				<div>
					<label class="control-label"> Подтвердите пароль</label>
					<input class="form-control" type="password" id="newPassword2"/>
				</div>
				<p id="errorForm" class="text-danger"></p>
				<div>
					<input id="savePassword" type="button" style="width: 200px" class="btn btn-primary btn-sm" value="Измененить" />
				</div>
			</div>
		</div>
	</div>
	<div class="col-md-6">
		<div class="panel panel-info">
			<div class="panel-heading">
				<div class="panel-title">Дополнительные данные</div>
			</div>
			<div class="panel-body">
				@if (Roles.IsUserInRole("lector"))
				{
					<div>
						@Html.LabelFor(m => m.Skill, new { @class = "control-label" })
						<div>
							@Html.TextBoxFor(m => m.Skill, new { @class = "form-control" })
						</div>
						<p></p>
					</div>
				}
				<div>
					@Html.LabelFor(m => m.Email, new {@class = "control-label"})
					<div>
						@Html.TextBoxFor(m => m.Email, new {@class = "form-control"})
					</div>
					<p></p>
				</div>
				<div>
					@Html.LabelFor(m => m.Phone, new {@class = "control-label"})
					<div>
						@Html.TextBoxFor(m => m.Phone, new {@class = "form-control"})
					</div>
					<p></p>
				</div>
				<div>
					@Html.LabelFor(m => m.SkypeContact, new {@class = "control-label"})
					<div>
						@Html.TextBoxFor(m => m.SkypeContact, new {@class = "form-control"})
					</div>
					<p></p>
				</div>
				<div>
					@Html.LabelFor(m => m.About, new {@class = "control-label"})
					<div>
						@Html.TextBoxFor(m => m.About, new {@class = "form-control"})
					</div>
					<p></p>
				</div>				
			</div>
		</div>
	</div>
</div>

